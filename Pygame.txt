import pygame
import sys
import random
import time

class Game():

    def __init__(self):
        # rozdzielczosci
        # 640, 360
        # 800, 450
        # 960, 540
        # 1120, 630
        # 1280, 720
        # 1920, 1080
        # proporcje ekranu
        self.W, self.H = 1280, 720 #<-- Tu wklej wybran¹ roŸdzielczoœæ
        self.size_W, self.size_H = 1280/self.W, 720/self.H
        # init
        pygame.init()
        # ekrany
        self.screen_start = pygame.display.set_mode((self.W, self.H))
        self.screen_trapez = pygame.display.set_mode((self.W, self.H))
        self.screen_romb = pygame.display.set_mode((self.W, self.H))
        self.screen_rownoleglobok = pygame.display.set_mode((self.W, self.H))
        # pomalowanie ekranu
        self.screen_start.fill((0, 0, 0))
        # punkty do rysowania
        self.button1_points = ([100/self.size_W, 330/self.size_H], [100/self.size_W, 620/self.size_H], [630/self.size_W, 620/self.size_H], [630/self.size_W, 330/self.size_H])
        self.button2_points = ([650/self.size_W, 330/self.size_H], [650/self.size_W, 620/self.size_H], [1180/self.size_W, 620/self.size_H], [1180/self.size_W, 330/self.size_H])
        self.button3_points = ([100/self.size_W, 20/self.size_H], [100/self.size_W, 310/self.size_H], [630/self.size_W, 310/self.size_H], [630/self.size_W, 20/self.size_H])
        self.button4_points = ([650/self.size_W, 20/self.size_H], [650/self.size_W, 310/self.size_H], [1180/self.size_W, 310/self.size_H], [1180/self.size_W, 20/self.size_H])
        # zegar
        self.max_tps = 60.0
        self.clock = pygame.time.Clock()
        self.delta = 0.0
        # zamknij ekran startowy
        self.question = "True"
        # czcionka
        self.czcionka = pygame.font.SysFont("monospace", int(40/self.size_W))
        self.i = 0
        while True:
            # pozycja myszki
            self.mouse = pygame.mouse.get_pos()
            # optymalizacja
            self.delta += self.clock.tick()/1000.0
            while self.delta > 1/self.max_tps:
                self.delta -= 1/self.max_tps
                # events
                for event in pygame.event.get():
                    if event.type == pygame.QUIT:
                        sys.exit(0)
                    elif event.type == pygame.KEYDOWN and pygame.K_ESCAPE:
                        sys.exit(0)
                    elif event.type == pygame.MOUSEBUTTONDOWN:
                        if self.i != 1:
                            self.mouse_click = pygame.mouse.get_pos()
                            Game.button_przeniesienie(self)
                            self.i += 1

                # rysowanie
                if self.question == "True":
                    self.button()
                    self.draw()
                    pygame.display.flip()

    def trojkat(self):
        wysokosc = random.randint(1, 10)
        podstawa = random.randint(1, 10)
        self.question = "False"
        self.screen_trojkat = pygame.display.set_mode((self.W, self.H))
        self.screen_trojkat.fill((0, 0, 0))
        pygame.draw.aalines(self.screen_trojkat, (255, 255, 255), (0, 0), ([100/self.size_W, 520/self.size_H], [1180/self.size_W, 520/self.size_H], [640/self.size_W, 100/self.size_H]))
        pygame.draw.aalines(self.screen_trojkat, (255, 255, 255), (0, 0), ([640/self.size_W, 100/self.size_H], [640/self.size_W, 520/self.size_H]))
        text = "Wybierz wynik: "
        text_render = self.czcionka.render(text, 1, (255, 255, 255))
        self.screen_trojkat.blit(text_render, (300/self.size_W, 595/self.size_H))
        wysokosc = str(wysokosc)
        podstawa = str(podstawa)
        text_render = self.czcionka.render(wysokosc, 1, (255, 255, 255))
        self.screen_trojkat.blit(text_render, (650/self.size_W, 310/self.size_H))
        text_render = self.czcionka.render(podstawa, 1, (255, 255, 255))
        self.screen_trojkat.blit(text_render, (630/self.size_W, 520/self.size_H))
        wysokosc = int(wysokosc)
        podstawa = int(podstawa)
        pygame.display.flip()
        wynik = podstawa * wysokosc / 2
        wynik_1 = podstawa * wysokosc
        wynik_2 = podstawa * wysokosc + random.randint(1, 5)
        self.random_wynik = random.randint(1, 3)
        if self.random_wynik == 1:
            jeden = float(wynik)
            dwa = float(wynik_2)
            trzy = float(wynik_1)
        if self.random_wynik == 2:
            jeden = float(wynik_2)
            dwa = float(wynik_1)
            trzy = float(wynik)
        if self.random_wynik == 3:
            jeden = float(wynik_1)
            dwa = float(wynik)
            trzy = float(wynik_2)
        s = 0
        while s == 0:
            mouse = pygame.mouse.get_pos()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    sys.exit(0)
                elif event.type == pygame.KEYDOWN and pygame.K_ESCAPE:
                    sys.exit(0)
                elif event.type == pygame.MOUSEBUTTONDOWN:
                    if 35/self.size_W < mouse[0] < 165/self.size_W and 75/self.size_H > mouse[1] > 35/self.size_H:
                        Game()
                        s += 1
                    if self.random_wynik == 1:
                        if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (0, 255, 0), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (255, 0, 0), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (255, 0, 0), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                    if self.random_wynik == 3:
                        if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (0, 255, 0), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (255, 0, 0), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (255, 0, 0), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                    if self.random_wynik == 2:
                        if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (0, 255, 0), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (255, 0, 0), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                            pygame.draw.rect(self.screen_trojkat, (255, 0, 0), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trojkat(self)

                if 35/self.size_W < mouse[0] < 165/self.size_W and 75/self.size_H > mouse[1] > 35/self.size_H:
                    pygame.draw.rect(self.screen_trojkat, (30, 30, 30), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trojkat, (0, 0, 0), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()

                if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_trojkat, (30, 30, 30), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trojkat, (0, 0, 0), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_trojkat, (30, 30, 30), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trojkat, (0, 0, 0), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_trojkat, (30, 30, 30), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trojkat, (0, 0, 0), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trojkat.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()

    def trapez(self):
        wysokosc = random.randint(1, 10)
        podstawa_1 = random.randint(1, 10)
        podstawa_2 = random.randint(1, 10)
        self.question = "False"
        self.screen_trapez = pygame.display.set_mode((self.W, self.H))
        self.screen_trapez.fill((0, 0, 0))
        pygame.draw.aalines(self.screen_trapez, (255, 255, 255), (0, 0), ([100/self.size_W, 520/self.size_H ], [1180/self.size_W, 520/self.size_H ], [880/self.size_W, 100/self.size_H ], [400/self.size_W, 100/self.size_H ]))
        pygame.draw.aalines(self.screen_trapez, (255, 255, 255), (0, 0), ([640/self.size_W, 100/self.size_H ], [640/self.size_W, 520/self.size_H ]))
        wysokosc = str(wysokosc)
        podstawa_1 = str(podstawa_1)
        podstawa_2 = str(podstawa_2)
        text_render = self.czcionka.render(wysokosc, 1, (255, 255, 255))
        self.screen_trapez.blit(text_render, (650/self.size_W, 310/self.size_H))
        text_render = self.czcionka.render(podstawa_1, 1, (255, 255, 255))
        self.screen_trapez.blit(text_render, (630/self.size_W, 520/self.size_H))
        text_render = self.czcionka.render(podstawa_2, 1, (255, 255, 255))
        self.screen_trapez.blit(text_render, (630/self.size_W, 55/self.size_H))
        text = "Wybierz wynik: "
        text_render = self.czcionka.render(text, 1, (255, 255, 255))
        self.screen_trapez.blit(text_render, (300/self.size_W, 595/self.size_H))
        pygame.display.flip()
        wysokosc = int(wysokosc)
        podstawa_1 = int(podstawa_1)
        podstawa_2 = int(podstawa_2)
        wynik = (podstawa_1+podstawa_2)*wysokosc/2
        wynik_1 = (podstawa_1+podstawa_2)*wysokosc
        wynik_2 = (podstawa_1+podstawa_2)*wysokosc + random.randint(1, 5)
        self.random_wynik = random.randint(1, 3)
        if self.random_wynik == 1:
            jeden = float(wynik)
            dwa = float(wynik_2)
            trzy = float(wynik_1)
        if self.random_wynik == 2:
            jeden = float(wynik_2)
            dwa = float(wynik_1)
            trzy = float(wynik)
        if self.random_wynik == 3:
            jeden = float(wynik_1)
            dwa = float(wynik)
            trzy = float(wynik_2)
        s = 0
        while s == 0:
            mouse = pygame.mouse.get_pos()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    sys.exit(0)
                elif event.type == pygame.KEYDOWN and pygame.K_ESCAPE:
                    sys.exit(0)
                elif event.type == pygame.MOUSEBUTTONDOWN:
                    if 35 < mouse[0] < 165 and 75 > mouse[1] > 35:
                        Game()
                        s += 1
                    if self.random_wynik == 1:
                        if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (0, 255, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (255, 0, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (255, 0, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                    if self.random_wynik == 3:
                        if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (0, 255, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (255, 0, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (255, 0, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                    if self.random_wynik == 2:
                        if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (0, 255, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (255, 0, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_trapez, (255, 0, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.trapez(self)

                if 35/self.size_W < mouse[0] < 165/self.size_W and 75/self.size_H > mouse[1] > 35/self.size_H:
                    pygame.draw.rect(self.screen_trapez, (30, 30, 30), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trapez, (0, 0, 0), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()

                if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_trapez, (30, 30, 30), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trapez, (0, 0, 0), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_trapez, (30, 30, 30), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trapez, (0, 0, 0), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_trapez, (30, 30, 30), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_trapez, (0, 0, 0), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_trapez.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()

    def romb(self):
        wysokosc = random.randint(1, 10)
        podstawa = random.randint(1, 10)
        self.question = "False"
        self.screen_romb = pygame.display.set_mode((self.W, self.H))
        self.screen_romb.fill((0, 0, 0))
        pygame.draw.aalines(self.screen_romb, (255, 255, 255), (0, 0), ([100/self.size_W, 310/self.size_H], [1180/self.size_W, 310/self.size_H]))
        pygame.draw.aalines(self.screen_romb, (255, 255, 255), (0, 0), ([640/self.size_W, 100/self.size_H], [640/self.size_W, 530/self.size_H]))
        pygame.draw.aalines(self.screen_romb, (255, 255, 255), (0, 0), ([100/self.size_W, 310/self.size_H],[640/self.size_W, 100/self.size_H],[1180/self.size_W, 310/self.size_H], [640/self.size_W, 530/self.size_H]))
        text = "Wybierz wynik: "
        text_render = self.czcionka.render(text, 1, (255, 255, 255))
        self.screen_romb.blit(text_render, (300/self.size_W, 595/self.size_H))
        wysokosc = str(wysokosc)
        podstawa = str(podstawa)
        text_render = self.czcionka.render(wysokosc, 1, (255, 255, 255))
        self.screen_romb.blit(text_render, (650/self.size_W, 310/self.size_H))
        text_render = self.czcionka.render(podstawa, 1, (255, 255, 255))
        self.screen_romb.blit(text_render, (630/self.size_W, 520/self.size_H))
        wysokosc = int(wysokosc)
        podstawa = int(podstawa)
        pygame.display.flip()
        wynik = podstawa * wysokosc / 2
        wynik_1 = podstawa * wysokosc
        wynik_2 = podstawa * wysokosc + random.randint(1, 5)
        self.random_wynik = random.randint(1, 3)
        if self.random_wynik == 1:
            jeden = float(wynik)
            dwa = float(wynik_2)
            trzy = float(wynik_1)
        if self.random_wynik == 2:
            jeden = float(wynik_2)
            dwa = float(wynik_1)
            trzy = float(wynik)
        if self.random_wynik == 3:
            jeden = float(wynik_1)
            dwa = float(wynik)
            trzy = float(wynik_2)
        s = 0
        while s == 0:
            mouse = pygame.mouse.get_pos()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    sys.exit(0)
                elif event.type == pygame.KEYDOWN and pygame.K_ESCAPE:
                    sys.exit(0)
                elif event.type == pygame.MOUSEBUTTONDOWN:
                    if 35/self.size_W < mouse[0] < 165/self.size_W and 75 > mouse[1] > 35:
                        Game()
                        s += 1
                    if self.random_wynik == 1:
                        if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (0, 255, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (255, 0, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (255, 0, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                    if self.random_wynik == 3:
                        if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (0, 255, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (255, 0, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (255, 0, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                    if self.random_wynik == 2:
                        if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (0, 255, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (255, 0, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_romb, (255, 0, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.romb(self)

                if 35/self.size_W < mouse[0] < 165/self.size_W and 75/self.size_H > mouse[1] > 35/self.size_H:
                    pygame.draw.rect(self.screen_romb, (30, 30, 30), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_romb, (0, 0, 0), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()

                if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_romb, (30, 30, 30), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_romb, (0, 0, 0), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_romb, (30, 30, 30), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_romb, (0, 0, 0), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_romb, (30, 30, 30), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_romb, (0, 0, 0), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_romb.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()


    def rownoleglobok(self):
        wysokosc = random.randint(1, 10)
        podstawa = random.randint(1, 10)
        self.question = "False"
        self.screen_rownoleglobok = pygame.display.set_mode((self.W, self.H))
        self.screen_rownoleglobok.fill((0, 0, 0))
        pygame.draw.aalines(self.screen_rownoleglobok, (255, 255, 255), (0, 0), ([100/self.size_W, 520/self.size_H], [980/self.size_W, 520/self.size_H], [1180/self.size_W, 100/self.size_H], [300/self.size_W, 100/self.size_H]))
        pygame.draw.aalines(self.screen_rownoleglobok, (255, 255, 255), (0, 0), ([640/self.size_W, 100/self.size_H], [640/self.size_W, 520/self.size_H]))
        wysokosc = str(wysokosc)
        podstawa = str(podstawa)
        text_render = self.czcionka.render(wysokosc, 1, (255, 255, 255))
        self.screen_rownoleglobok.blit(text_render, (650/self.size_W, 310/self.size_H))
        text_render = self.czcionka.render(podstawa, 1, (255, 255, 255))
        self.screen_rownoleglobok.blit(text_render, (630/self.size_W, 520/self.size_H))
        text = "Wybierz wynik: "
        text_render = self.czcionka.render(text, 1, (255, 255, 255))
        self.screen_rownoleglobok.blit(text_render, (300/self.size_W, 595/self.size_H))
        pygame.display.flip()
        wysokosc = int(wysokosc)
        podstawa = int(podstawa)
        wynik = podstawa*wysokosc
        wynik_1 = wynik - random.randint(1, 5)
        wynik_2 = wynik + random.randint(1, 5)
        self.random_wynik = random.randint(1, 3)
        if self.random_wynik == 1:
            jeden = wynik
            dwa = wynik_2
            trzy = wynik_1
        if self.random_wynik == 2:
            jeden = wynik_2
            dwa = wynik_1
            trzy = wynik
        if self.random_wynik == 3:
            jeden = wynik_1
            dwa = wynik
            trzy = wynik_2
        s = 0
        while s == 0:
            mouse = pygame.mouse.get_pos()
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    sys.exit(0)
                elif event.type == pygame.KEYDOWN and pygame.K_ESCAPE:
                    sys.exit(0)
                elif event.type == pygame.MOUSEBUTTONDOWN:
                    if 35 < mouse[0] < 165 and 75 > mouse[1] > 35:
                        Game()
                        s += 1
                    if self.random_wynik == 1:
                        if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (0, 255, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (255, 0, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (255, 0, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                    if self.random_wynik == 3:
                        if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (0, 255, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (255, 0, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                        elif 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (255, 0, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                    if self.random_wynik == 2:
                        if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (0, 255, 0), (930/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                        elif 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (255, 0, 0), (680/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)
                        elif 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H  < mouse[1] < 645/self.size_H :
                            pygame.draw.rect(self.screen_rownoleglobok, (255, 0, 0), (805/self.size_W, 595/self.size_H , 105/self.size_W, 50/self.size_H ))
                            pygame.display.flip()
                            time.sleep(2)
                            Game.rownoleglobok(self)

                if 35/self.size_W < mouse[0] < 165/self.size_W and 75/self.size_H > mouse[1] > 35/self.size_H:
                    pygame.draw.rect(self.screen_rownoleglobok, (30, 30, 30), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_rownoleglobok, (0, 0, 0), (35/self.size_W, 35/self.size_H, 130/self.size_W, 30/self.size_H))
                    text_render = self.czcionka.render("wroc", 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (40/self.size_W, 20/self.size_H))
                    pygame.display.flip()

                if 680/self.size_W < mouse[0] < 785/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_rownoleglobok, (30, 30, 30), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_rownoleglobok, (0, 0, 0), (680/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "A:{}".format(jeden)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (680/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 805/self.size_W < mouse[0] < 910/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_rownoleglobok, (30, 30, 30), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_rownoleglobok, (0, 0, 0), (805/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "B:{}".format(dwa)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (805/self.size_W, 605/self.size_H))
                    pygame.display.flip()

                if 930/self.size_W < mouse[0] < 1035/self.size_W and 595/self.size_H < mouse[1] < 645/self.size_H:
                    pygame.draw.rect(self.screen_rownoleglobok, (30, 30, 30), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()
                else:
                    pygame.draw.rect(self.screen_rownoleglobok, (0, 0, 0), (930/self.size_W, 595/self.size_H, 105/self.size_W, 50/self.size_H))
                    czcionka = pygame.font.SysFont("monospace", int(30/self.size_W))
                    text = "C:{}".format(trzy)
                    text_render = czcionka.render(text, 1, (255, 255, 255))
                    self.screen_rownoleglobok.blit(text_render, (930/self.size_W, 605/self.size_H))
                    pygame.display.flip()

    def draw(self):
        pygame.draw.aalines(self.screen_start, (255, 255, 255), (0, 0), ([120/self.size_W, 600/self.size_H], [610/self.size_W, 600/self.size_H], [365/self.size_W, 350/self.size_H]))
        pygame.draw.aalines(self.screen_start, (255, 255, 255), (0, 0), ([220/self.size_W, 40/self.size_H], [510/self.size_W, 40/self.size_H], [600/self.size_W, 290/self.size_H], [120/self.size_W, 290/self.size_H]))
        pygame.draw.aalines(self.screen_start, (255, 255, 255), (0, 0), ([670/self.size_W, 290/self.size_H], [750/self.size_W, 40/self.size_H], [1160/self.size_W, 40/self.size_H], [1080/self.size_W, 290/self.size_H]))
        pygame.draw.aalines(self.screen_start, (255, 255, 255), (0, 0), ([670/self.size_W, 475/self.size_H], [915/self.size_W, 365/self.size_H], [1160/self.size_W, 475/self.size_H], [915/self.size_W, 600/self.size_H]))

    def button(self):
        if 100/self.size_W < self.mouse[0] < 630/self.size_W and 620/self.size_H > self.mouse[1] > 330/self.size_H:
            self.button1 = pygame.draw.polygon(self.screen_start, (30, 30, 30), self.button1_points)
        else:
            self.button1 = pygame.draw.polygon(self.screen_start, (0, 0, 0), self.button1_points)

        if 100/self.size_W < self.mouse[0] < 630/self.size_W and 310/self.size_H > self.mouse[1] > 20/self.size_H:
            self.button3 = pygame.draw.polygon(self.screen_start, (30, 30, 30), self.button3_points)
        else:
            self.button3 = pygame.draw.polygon(self.screen_start, (0, 0, 0), self.button3_points)

        if 650/self.size_W < self.mouse[0] < 1180/self.size_W and 330/self.size_H < self.mouse[1] < 620/self.size_H:
            self.button2 = pygame.draw.polygon(self.screen_start, (30, 30, 30), self.button2_points)
        else:
            self.button2 = pygame.draw.polygon(self.screen_start, (0, 0, 0), self.button2_points)

        if 650/self.size_W < self.mouse[0] < 1180/self.size_W and 20/self.size_H < self.mouse[1] < 310/self.size_H:
            self.button4 = pygame.draw.polygon(self.screen_start, (30, 30, 30), self.button4_points)
        else:
            self.button4 = pygame.draw.polygon(self.screen_start, (0, 0, 0), self.button4_points)

    def button_przeniesienie(self):
        if 100/self.size_W < self.mouse_click[0] < 630/self.size_W and 620/self.size_H > self.mouse_click[1] > 330/self.size_H:
            Game.trojkat(self)

        if 100/self.size_W < self.mouse_click[0] < 630/self.size_W and 310/self.size_H > self.mouse_click[1] > 20/self.size_H:
            Game.trapez(self)

        if 650/self.size_W < self.mouse_click[0] < 1180/self.size_W and 330/self.size_H < self.mouse_click[1] < 620/self.size_H:
            Game.romb(self)

        if 650/self.size_W < self.mouse_click[0] < 1180/self.size_W and 20/self.size_H < self.mouse_click[1] < 310/self.size_H:
            Game.rownoleglobok(self)

Game()